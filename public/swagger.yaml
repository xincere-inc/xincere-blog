openapi: 3.0.0
info:
  title: Next.js API
  description: API documentation for Next.js 15 application
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /api/hello:
    get:
      summary: Greet the user
      tags: [Greeting]
      operationId: greetUser
      responses:
        "200":
          description: A greeting message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, world!"
  /api/auth/signup:
    post:
      summary: Register a new user
      tags: [Auth]
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupInput"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignupResponse"
        "400":
          description: Invalid email format, missing required fields, or user already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error, e.g., database failure or internal issue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    SignupInput:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
          description: "The email address of the user. Must be a valid email format."
          example: "user@example.com"
        password:
          type: string
          format: password
          minLength: 8
          description: "The password for the user. Must be at least 8 characters."
          example: "Password123!"
        name:
          type: string
          minLength: 3
          description: "The name of the user. Must be at least 3 characters long."
          example: "John Doe"
    SignupResponse:
      type: object
      properties:
        message:
          type: string
          description: "Success message indicating user creation."
          example: "User created successfully"
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: "Unique identifier for the newly created user."
              example: "123e4567-e89b-12d3-a456-426614174000"
            email:
              type: string
              format: email
              description: "The email address of the newly created user."
              example: "user@example.com"
            name:
              type: string
              description: "The name of the newly created user."
              example: "John Doe"
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: "Description of the error encountered."
          example: "Provide valid password"
        details:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: "Error message for a specific validation failure."
                example: "Password must be at least 8 characters."
              field:
                type: string
                description: "The field that failed validation."
                example: "password"
